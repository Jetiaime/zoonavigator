name: Test

on:
  workflow_call:
    inputs:
      skip-api:
        required: false
        type: boolean
        default: false
      skip-web:
        required: false
        type: boolean
        default: false
      skip-e2e:
        required: false
        type: boolean
        default: false
      skip-build:
        required: false
        type: boolean
        default: false
      skip-docs:
        required: false
        type: boolean
        default: false

permissions:
  contents: read

env:
  CI: true

jobs:
  test-api:
    runs-on: ubuntu-latest
    if: inputs.skip-api != true
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      - name: Check API formatting
        working-directory: api
        run: |
          sbt scalafmtCheckAll

      - name: Run API tests
        working-directory: api
        run: |
          sbt test

  test-web:
    runs-on: ubuntu-latest
    if: inputs.skip-web != true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Set up Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v2
        with:
          install-dependencies: true

      - name: Install dependencies
        working-directory: web
        run: |
          npm ci

      - name: Run linting
        working-directory: web
        run: |
          npm run lint

      - name: Run tests
        working-directory: web
        run: |
          npm run test:ci
        env:
          CHROME_BIN: "${{ steps.setup-chrome.outputs.chrome-path }}"

  test-e2e:
    env:
      API_PORT: 9000
      WEB_PORT: 4200
      ZK_CONNECTION_STRING: localhost:2181
    runs-on: ubuntu-latest
    if: inputs.skip-e2e != true
    services:
      zookeeper:
        image: zookeeper:3.9
        ports:
          - 2181:2181
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Set up sbt
        uses: sbt/setup-sbt@v1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: web/package-lock.json

      - name: Install web dependencies
        working-directory: web
        run: |
          npm ci

      - name: Install Playwright Browsers
        working-directory: web
        run: |
          npx playwright install --with-deps

      - name: Start API server
        uses: JarvusInnovations/background-action@v1
        with:
          working-directory: api
          run: |
            sbt "play/run ${API_PORT}" &
          wait-on: |
            http://localhost:${{ env.API_PORT }}/api/config
          wait-for: 5m
          tail: stderr,stdout
          log-output: stderr,stdout
          log-output-if: failure

      - name: Run e2e tests
        working-directory: web
        run: |
          npm run e2e

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: web/playwright-report/
          retention-days: 7

  test-build:
    if: inputs.skip-build != true
    uses: ./.github/workflows/build.yml

  test-docs:
    runs-on: ubuntu-latest
    if: inputs.skip-docs != true
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: pip
          cache-dependency-path: docs/requirements.txt

      - name: Install documentation dependencies
        working-directory: docs
        run: |
          pip install -r requirements.txt

      - name: Build documentation
        working-directory: docs
        run: |
          sphinx-build -W -b html . _build/html

      - name: Check documentation links
        working-directory: docs
        run: |
          sphinx-build -b linkcheck . _build/linkcheck
